{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Collections, Comparable and Comparator:\
What are they and what are they for?\
\
Difference between collection and collections:\
The Collection interface is used to pass around collections of objects where maximum generality is desired, the major difference is that collection is an interface and collections is a class for static method, utilities like sort, they have iterator method which can be used directly.\
Not all collection s are sorted, so it doesn\'92t have a sort method\
Collections: a collection represents a group pf objects known as its elements\
Comparable is an interface and Comparator is also an interface\
\
Comparable implementations provide a \cf2 natural\cf0  ordering\'97in whatever way we write in the comparable implementation. for a class, which allows objects of that class to be sorted automatically. Although elements of different types may be mutually comparable, none of the classes listed here permit interclass comparison\'97the list\'92s elements may not be compared to one another using the comparator.\
\
Comparator: when you don\'92t want to change/rewrite the comparable implementation in the class, you can use comparator interface and you can have unlimited number of comparator. But you can only have one comparable in your class\
\
\
}