2+2
fileName<- "~/Desktop/CSCI6444/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
data
g <- graph_from_data_frame(data, directed=TRUE)
library(igraph)
g <- graph_from_data_frame(data, directed=TRUE)
print(g, e=TRUE, v=TRUE)
adjmatrix = as_adjacency_matrix(g)
adjmatrix
simplified_g<-simplify(g)
print(simplified_g)
simplified_g<-simplified_g[:200]
list_nodes_1 = neighbors(simplified_g, lines)
lines <- readLines(fileName)
lines
list_nodes_1 = neighbors(simplified_g, lines)
list_nodes_1 = neighbors(simplified_g, data)
subv <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)
list_nodes_1 = neighbors(simplified_g, subv)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
simplified_g2<-simplify(g2)
plot(simplified_g2)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
sg1 <- decompose.graph(g1,mode="weak")
sg1 <- decompose.graph(simplified_g,mode="weak")
sg1
plot(sg1)
neighverts <- unique(unlist(sapply(sg1,FUN=function(s){if(any(V(s)$name %in% subv)) V(s)$name else NULL})))
g3 <- induced.subgraph(graph=simplified_g,vids=neighverts)
g3
plot(g3)
plot(g2)
is.simple(g2)
E(g2)$weight=rnorm(ecount(g2))
V(g2)$weight=rnorm(vcount(g2))
sg=induced.subgraph(g2, which(V(g2)$weight>0.5))
plot(sg,edge.label=round(E(sg)$weight,3))
E(simplified_g)$weight=rnorm(ecount(simplified_g))
V(simplified_g)$weight=rnorm(vcount(simplified_g))
sg=induced.subgraph(simplified_g, which(V(simplified_g)$weight>0.7))
plot(sg,edge.label=round(E(sg)$weight,3))
plot(sg)
sg=induced.subgraph(simplified_g, which(V(simplified_g)$weight>0.9))
plot(sg)
page_rank(g2)
page_rank(simplified_g)
wc=walktrap.community(simplified_g)
plot(wc,simplified_g,vertex.size=.5, layout=layout.fruchterman.reingold)
wc=walktrap.community(g2)
plot(wc,g2,vertex.size=.5, layout=layout.fruchterman.reingold)
plot(g2)
E(g2)$weight=rnorm(ecount(g2))
E(g)$weight=rnorm(ecount(g))
V(g)$weight=rnorm(vcount(g))
sg=induced.subgraph(g, which(V(g)$weight>0.9))
plot(sg)
simplified_g<-simplify(g)
sg=induced.subgraph(simplified_g, which(V(simplified_g)$weight>0.9))
plot(sg)
delete_isolates(g)
library(hierformR)
install.packages("hierformR")
simplified_g<-simplify(g, remove.multiple = TRUE, remove.loops = TRUE)
plot(simplified_g)
fileName<- "~/Desktop/CSCI6444/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
library(igraph)
g <- graph_from_data_frame(data, directed=TRUE)
print(g, e=TRUE, v=TRUE)
#E(g2)$weight=rnorm(ecount(g2))
E(g)$weight=rnorm(ecount(g))
V(g)$weight=rnorm(vcount(g))
plot(g)
simplified_g<-simplify(g)
plot(simplified_g)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
#sg1 <- decompose.graph(g,mode="weak")
sg <- decompose.graph(g,mode="weak")
sg
plot(sg)
g1=g <- graph_from_data_frame(sg, directed=TRUE)
g1<- graph_from_data_frame(sg, directed=TRUE)
E(g2)$weight=rnorm(ecount(g2))
V(g2)$weight=rnorm(vcount(g2))
plot(g2)
plot(g2)
add_vertices(g2,11)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
g3 <- add_vertices(g2,11)
plot(g3)
add.edges(g3,c(11,1))
plot(g3)
atri <- count_triangles(kite)
atri <- count_triangles(g3)
plot(kite, vertex.label=atri)
plot(g3, vertex.label=atri)
E(g3)$weight=rnorm(ecount(g3))
V(g3)$weight=rnorm(vcount(g3))
plot(g3)
add.edges(g3,c(11,1))
plot(g3)
add.edges(g3,c(11,3))
plot(g3)
V(g3)$weight=rnorm(vcount(g3))
E(g3)$weight=rnorm(ecount(g3))
plot(g3)
atri <- count_triangles(g3)
plot(g3, vertex.label=atri)
list <- as_adj_list(g3)
print(list)
edge_list=as_adj_edge_list(g3)
print(edge_list)
closeness.cent <- closeness(g, mode="all")
g <- graph_from_data_frame(data, directed=TRUE)
closeness.cent <- closeness(g, mode="all")
closeness.cent
sort(closeness.cent, decreasing = TRUE)
dia<-diameter(g)
dia
get_diameter(g)
page_rank(g3)
page_rank(simplified_g)
sg1 <- decompose.graph(simplified_g,mode="weak")
sg1
neighverts <- unique(unlist(sapply(sg1,FUN=function(s){if(any(V(s)$name %in% subv)) V(s)$name else NULL})))
neighverts
g3 <- induced.subgraph(graph=simplified_g,vids=neighverts)
g3
plot(g3)
sg=induced.subgraph(g2, which(V(g2)$weight>0.5))
plot(sg,edge.label=round(E(sg)$weight,3))
E(simplified_g)$weight=rnorm(ecount(simplified_g))
V(simplified_g)$weight=rnorm(vcount(simplified_g))
sg=induced.subgraph(simplified_g, which(V(simplified_g)$weight>0.7))
plot(sg,edge.label=round(E(sg)$weight,3))
page_rank(g2)
wc=walktrap.community(simplified_g)
plot(wc,simplified_g,vertex.size=.5, layout=layout.fruchterman.reingold)
wc=walktrap.community(g2)
plot(wc,g2,vertex.size=.5, layout=layout.fruchterman.reingold)
fileName<- "~/Desktop/CSCI6444/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
library(igraph)
g <- graph_from_data_frame(data, directed=TRUE)
print(g, e=TRUE, v=TRUE)
adjmatrix = as_adjacency_matrix(g)
adjmatrix
simplified_g<-simplify(g)
plot(simplified_g)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
g3 <- add_vertices(g2,11)
plot(g3)
add.edges(g3,c(11,1))
add.edges(g3,c(11,1))
plot(g3)
add.edges(g3,c(11,3))
plot(g3)
plot(g3)
g3 <- add_vertices(g2,11)
plot(g3)
plot(g3)
add.edges(g3,c(11,3))
add.edges(g3,c(11,1))
plot(g3)
fileName<- "~/Desktop/CSCI6444/Project 1/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
library(igraph)
g <- graph_from_data_frame(data, directed=TRUE)
print(g, e=TRUE, v=TRUE)
adjmatrix = as_adjacency_matrix(g)
adjmatrix
simplified_g<-simplify(g)
plot(simplified_g)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
g3 <- add_vertices(g2,11)
plot(g3)
add.edges(g3,c(11,1))
add.edges(g3,c(11,3))
plot(g3)
atri <- count_triangles(g3)
plot(g3, vertex.label=atri)
plot(g3, vertex.label=atri)
plot(g3, vertex.label=atri)
plot(g3, vertex.label=atri)
list <- as_adj_list(g3)
print(list)
edge_list=as_adj_edge_list(g3)
print(edge_list)
closeness.cent <- closeness(g, mode="all")
closeness.cent
sort(closeness.cent, decreasing = TRUE)
dia<-diameter(g)
dia
get_diameter(g)
sort(closeness.cent, decreasing = FALSE)
plot(simplified_g)
plot(g2)
is_simple(g)
is.simple(g)
fileName<- "~/Desktop/CSCI6444/Project 1/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
library(tidyverse)
library(igraph)
data %>%
rename(
FromNode = V1,
ToNode = V2
)
g <- graph_from_data_frame(data, directed=TRUE)
print(g, e=TRUE, v=TRUE)
adjmatrix = as_adjacency_matrix(g)
adjmatrix
simplified_g<-simplify(g)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
View(g)
set.seed(42)
cl <- walktrap.community(g, steps = 5)
cl$degree <- (degree(g)[cl$names])
cl$cluster <- unname(ave(cl$degree, cl$membership, FUN=function(x)names(x)[which.max(x)]))
V(g)$name <- cl$cluster
E(g)$weight <- 1
V(g)$weight <- 1
gcon <- contract.vertices(g, cl$membership, vertex.attr.comb = list(weight = "sum", name = function(x)x[1], "ignore"))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x)length(x)))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x) length(x)))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x)length(x)))
gcc <- induced.subgraph(gcon, V(gcon)$weight > 20)
V(gcc)$degree <- unname(degree(gcc))
set.seed(42)
par(mar = rep(0.1, 4))
g.layout <- layout.kamada.kawai(gcc)
plot.igraph(gcc, edge.arrow.size = 0.1, layout = g.layout, vertex.size = 0.5 * (V(gcc)$degree))
power_centrality(g2, nodes= V(g2), loops=FALSE, exponent=1, rescale = False, tol = 1e-07, sparse = TRUE)
power_centrality(g2, nodes= V(g2), loops=FALSE, exponent=1, rescale = FALSE, tol = 1e-07, sparse = TRUE)
power_centr=power_centrality(g2, nodes= V(g2), loops=FALSE, exponent=1, rescale = FALSE, tol = 1e-07, sparse = TRUE)
sort(power_centr, decreasing = FALSE)
page_rank(simplified_g)
sg1 <- decompose.graph(simplified_g,mode="weak")
sg1
sg=induced.subgraph(g2, which(V(g2)$weight>0.5))
plot(sg,edge.label=round(E(sg)$weight,3))
plot(sg,edge.label=round(E(sg)$weight))
plot(sg,edge.label=round(E(sg)$weight), 3)
V(sg)$weight=rnorm(vcount(sg))
E(sg)$weight=rnorm(ecount(sg))
plot(sg,edge.label=round(E(sg)$weight), 3)
plot(sg)
page_rank(g2)
wc=walktrap.community(simplified_g)
plot(wc,simplified_g,vertex.size=.5, layout=layout.fruchterman.reingold)
wc=walktrap.community(g2)
plot(wc,g2,vertex.size=.5, layout=layout.fruchterman.reingold)v
plot(wc,g2,vertex.size=.5, layout=layout.fruchterman.reingold)
neighverts <- unique(unlist(sapply(sg1,FUN=function(s){if(any(V(s)$name %in% subv)) V(s)$name else NULL})))
neighverts
fileName<- "~/Desktop/CSCI6444/Project 1/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
data<-read.table(textConnection(lines))
library(igraph)
g <- graph_from_data_frame(data, directed=TRUE)
print(g, e=TRUE, v=TRUE)
set.seed(42)
cl <- walktrap.community(g, steps = 5)
cl$degree <- (degree(g)[cl$names])
cl$cluster <- unname(ave(cl$degree, cl$membership, FUN=function(x)names(x)[which.max(x)]))
V(g)$name <- cl$cluster
E(g)$weight <- 1
V(g)$weight <- 1
gcon <- contract.vertices(g, cl$membership, vertex.attr.comb = list(weight = "sum", name = function(x)x[1], "ignore"))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x)length(x)))
install.packages("igraph")
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x)length(x)))
gcon <- contract.vertices(g, cl$membership, vertex.attr.comb = list(weight = "sum", name = function(x)x[1], "ignore"))
cl$cluster <- unname(ave(cl$degree, cl$membership, FUN=function(x)names(x)[which.max(x)]))
V(g)$name <- cl$cluster
install.packages("igraph")
library(igraph)
cl$degree <- (degree(g)[cl$names])
cl$cluster <- unname(ave(cl$degree, cl$membership, FUN=function(x)names(x)[which.max(x)]))
V(g)$name <- cl$cluster
E(g)$weight <- 1
V(g)$weight <- 1
V(g)$weight <- 1
gcon <- contract.vertices(g, cl$membership, vertex.attr.comb = list(weight = "sum", name = function(x)x[1], "ignore"))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x)length(x)))
gcc <- induced.subgraph(gcon, V(gcon)$weight > 20)
V(gcc)$degree <- unname(degree(gcc))
set.seed(42)
par(mar = rep(0.1, 4))
g.layout <- layout.kamada.kawai(gcc)
plot.igraph(gcc, edge.arrow.size = 0.1, layout = g.layout, vertex.size = 0.5 * (V(gcc)$degree))
fileName<- "~/Desktop/CSCI6444/Project 1/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
lines
data<-read.table(textConnection(lines))
library(tidyverse)
data %>%
rename(
FromNode = V1,
ToNode = V2
)
g <- graph_from_data_frame(data, directed=TRUE)
adjmatrix = as_adjacency_matrix(g)
simplified_g<-simplify(g)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
set.seed(42)
cl <- walktrap.community(g, steps = 5)
cl$degree <- (degree(g)[cl$names])
cl$cluster <- unname(ave(cl$degree, cl$membership, FUN=function(x)names(x)[which.max(x)]))
V(g)$name <- cl$cluster
E(g)$weight <- 1
V(g)$weight <- 1
gcon <- contract.vertices(g, cl$membership, vertex.attr.comb = list(weight = "sum", name = function(x)x[1], "ignore"))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x) length(x)))
library(igraph)
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x) length(x)))
fileName<- "~/Desktop/CSCI6444/Project 1/email-EU/email-EU.edges"
con <- file(fileName,open="r")
lines<-readLines(con)
data<-read.table(textConnection(lines))
library(igraph)
install.packages(“igraph”)
install.packages("igraph")
install.packages("igraph")
library(igraph)
g <- graph_from_data_frame(data, directed=TRUE)
adjmatrix = as_adjacency_matrix(g)
simplified_g<-simplify(g)
subv <- c(1,2,3,4,5,6,7,8,9,10)
g2 <- induced.subgraph(graph=simplified_g,vids=subv)
plot(g2)
cl <- walktrap.community(g, steps = 5)
cl$degree <- (degree(g)[cl$names])
cl$cluster <- unname(ave(cl$degree, cl$membership, FUN=function(x)names(x)[which.max(x)]))
V(g)$name <- cl$cluster
E(g)$weight <- 1
V(g)$weight <- 1
gcon <- contract.vertices(g, cl$membership, vertex.attr.comb = list(weight = "sum", name = function(x)x[1], "ignore"))
gcon <- simplify(gcon, edge.attr.comb = list(weight = "sum", function(x) length(x)))
gcc <- induced.subgraph(gcon, V(gcon)$weight > 20)
V(gcc)$degree <- unname(degree(gcc))
set.seed(42)
par(mar = rep(0.1, 4))
g.layout <- layout.kamada.kawai(gcc)
plot.igraph(gcc, edge.arrow.size = 0.1, layout = g.layout, vertex.size = 0.5 * (V(gcc)$degree))
g3 <- add_vertices(g2,11)
plot(g3)
add.edges(g3,c(11,1))
add.edges(g3,c(11,3))
plot(g3)
atri <- count_triangles(g3)
plot(g3, vertex.label=atri)
list <- as_adj_list(g3)
print(list)
edge_list=as_adj_edge_list(g3)
print(edge_list)
diameter(g, directed = TRUE, unconnected = TRUE, weights = NULL)
radius(g, mode = 'all')
betweenness(g)
is_directed(g)
edge_density(g, loops=TRUE)
setwd("~/Desktop/CSCI6444/Project 2")
getwd()
SAT<-VCorpus(DirSource(".",ignore.case=TRUE, mode="text"))
library(tm)
library("tm")
install.packages(c('tm', 'SnowballC', 'wordcloud', 'topicmodels'))
library(tm)
SAT<-VCorpus(DirSource(".",ignore.case=TRUE, mode="text"))
SAT
